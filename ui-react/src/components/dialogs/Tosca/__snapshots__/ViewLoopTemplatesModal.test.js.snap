// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Verify ViewLoopTemplatesModal Test the BP template render method 1`] = `
<Styled(Bootstrap(Modal))
  onHide={[Function]}
  show={true}
  size="xl"
>
  <ModalHeader
    closeButton={true}
    closeLabel="Close"
  />
  <ModalBody>
    <WithStyles(Component)
      columns={
        Array [
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "index",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "render": [Function],
            "title": "#",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "name",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Template Name",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "maximumInstancesAllowed",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Maximum Instances Allowed",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "allowedLoopType",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Loop Type Allowed ",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "uniqueBlueprint",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "lookup": Object {
              "false": "No",
              "true": "Yes",
            },
            "title": "Unique Blueprint",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "updatedBy",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Modified By",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "updatedDate",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Modified Date",
          },
        ]
      }
      data={
        Object {
          "allowedLoopType": "OPEN",
          "index": "1",
          "maximumInstancesAllowed": "1",
          "name": "TOSCA_MTCA",
          "uniqueBlueprint": "No",
          "updatedBy": "admin",
          "updatedDate": "2019-09-06 19:09:42",
        }
      }
      icons={
        Object {
          "FirstPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "LastPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "NextPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "PreviousPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "ResetSearch": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Search": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "SortArrow": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
        }
      }
      onRowClick={[Function]}
      options={
        Object {
          "headerStyle": Object {
            "backgroundColor": "#ddd",
            "border": "1px solid black",
            "fontSize": "15pt",
            "text": "bold",
          },
          "rowStyle": [Function],
        }
      }
      title="View Blueprint MicroService Templates"
    />
    <styled.div
      dangerouslySetInnerHTML={
        Object {
          "__html": "Please select Blue print template to view the details",
        }
      }
      onChange={[Function]}
    />
  </ModalBody>
  <ModalFooter>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      type="button"
      variant="secondary"
    >
      Close
    </Button>
  </ModalFooter>
</Styled(Bootstrap(Modal))>
`;
