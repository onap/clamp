// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Verify ViewBlueprintMicroServiceTemplatesModal Test the tosca model view render method 1`] = `
<Styled(Bootstrap(Modal))
  onHide={[Function]}
  show={true}
  size="xl"
>
  <ModalHeader
    closeButton={true}
    closeLabel="Close"
  />
  <ModalBody>
    <WithStyles(Component)
      columns={
        Array [
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "index",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "render": [Function],
            "title": "#",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "templateName",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Template Name",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "templatePolicy[0].policyModelId",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Policy Model",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "templateId",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Template ID",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "updatedBy",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Uploaded By",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "editable": "never",
            "field": "timestamp",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Uploaded Date",
          },
        ]
      }
      data={
        Object {
          "content": "MTCA version 1",
          "index": "1",
          "templateId": "aaaa_bbbb_cccc",
          "templateName": "MTCA",
          "templatePolicy.policyModelId": "onap.policies.monitoring.docker.mtca.app",
          "timestamp": "2019-09-06 19:09:42",
          "updatedBy": "tester",
        }
      }
      icons={
        Object {
          "FirstPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "LastPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "NextPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "PreviousPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "ResetSearch": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Search": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "SortArrow": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
        }
      }
      onRowClick={[Function]}
      options={
        Object {
          "headerStyle": Object {
            "backgroundColor": "#ddd",
            "border": "1px solid black",
            "fontSize": "15pt",
            "text": "bold",
          },
          "rowStyle": [Function],
        }
      }
      title="View Blueprint MicroService Templates"
    />
    <div>
      <styled.textarea
        onChange={[Function]}
        value="Please select Blue print template to view the details"
      />
    </div>
  </ModalBody>
  <ModalFooter>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      type="button"
      variant="secondary"
    >
      Close
    </Button>
  </ModalFooter>
</Styled(Bootstrap(Modal))>
`;
